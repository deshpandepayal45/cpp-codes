 struct Node* reverse(struct Node* head)
    {
        struct Node* prev=NULL;
        struct Node* curr=NULL;
        struct Node* ford=NULL;
        
        while(curr!=NULL)
        {
            ford=curr->next;
            curr->next=prev;
            prev=curr;
            curr=ford;
        }
        return prev;
    }
    
    void addToL(struct Node* &first, struct Node* &second,int val)
    {
        struct Node* temp=new Node(val);
        if(first==NULL)
        {
            second=temp;
            first=temp;
            return;
        }
        else{
            second->next=temp;
           second =temp;
        }
    }
    
    struct Node* add(struct Node* first, struct Node* second)
    {
        struct Node* ansHead = NULL;
        struct Node* ansTail = NULL;
        int carry=0;
         while(first!=NULL || second!=NULL|| carry!=0)
         {
             int val1=0;
             if(first!=NULL)
             {
                 val1=first->data;
             }
              int val2=0;
             if(second!=NULL)
             {
                 val2=second->data;
             }
             
             int addi=carry+val1+val2;
             int digit=addi%10;
             
             addToL(ansHead, ansTail,digit);
             carry=addi/10;
             
              if(first!=NULL)
             {
                 first=first->next;
             }
             
             if(second!=NULL)
             {
                 second=second->next;
             }
             
         }
         return ansHead;
        
    }
