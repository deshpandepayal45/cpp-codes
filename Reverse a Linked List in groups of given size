struct node* reverseList(struct node *firt,int k)
    {
        // code here
        // return head of reversed list
         struct node* prev=NULL;
         struct node* curr=firt;
         struct node* ford=NULL;
         int cnt=1;
           
            while(curr!=NULL && cnt<=k)
            {
                ford=curr->next;
                curr->next=prev;
                prev=curr;
                curr=ford;
                cnt++;
            }
            
            
            // int nodeCnt=0;
            // struct node* temp=ford;
            //  while(temp!=NULL)
            //  {
            //      nodeCnt++;
            //      temp=temp->next;
            //  }
             
             if(ford!=NULL )
             {
                 firt->next=reverseList(ford, k);
             }
            // else{
            //     firt->next=reverseList(ford, nodeCnt);
            // }
            return prev;
    }
    

class Solution
{
    public:
    struct node *reverse (struct node *head, int k)
    { 
        // Complete this method
        struct node *an= reverseList(head,k);
        return an;
    }
};
